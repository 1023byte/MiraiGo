// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: pb/channel/GuildFeedCloudRead.proto

package channel

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNoticesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo    *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	PageNum    *uint32      `protobuf:"varint,2,opt,name=pageNum" json:"pageNum,omitempty"`
	AttachInfo *string      `protobuf:"bytes,3,opt,name=attachInfo" json:"attachInfo,omitempty"`
}

func (x *GetNoticesReq) Reset() {
	*x = GetNoticesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoticesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticesReq) ProtoMessage() {}

func (x *GetNoticesReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticesReq.ProtoReflect.Descriptor instead.
func (*GetNoticesReq) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{0}
}

func (x *GetNoticesReq) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *GetNoticesReq) GetPageNum() uint32 {
	if x != nil && x.PageNum != nil {
		return *x.PageNum
	}
	return 0
}

func (x *GetNoticesReq) GetAttachInfo() string {
	if x != nil && x.AttachInfo != nil {
		return *x.AttachInfo
	}
	return ""
}

type GetNoticesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo    *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	Notices    []*StNotice  `protobuf:"bytes,2,rep,name=notices" json:"notices,omitempty"`
	TotalNum   *uint32      `protobuf:"varint,3,opt,name=totalNum" json:"totalNum,omitempty"`
	IsFinish   *bool        `protobuf:"varint,4,opt,name=isFinish" json:"isFinish,omitempty"`
	AttachInfo *string      `protobuf:"bytes,5,opt,name=attachInfo" json:"attachInfo,omitempty"`
}

func (x *GetNoticesRsp) Reset() {
	*x = GetNoticesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoticesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticesRsp) ProtoMessage() {}

func (x *GetNoticesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticesRsp.ProtoReflect.Descriptor instead.
func (*GetNoticesRsp) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{1}
}

func (x *GetNoticesRsp) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *GetNoticesRsp) GetNotices() []*StNotice {
	if x != nil {
		return x.Notices
	}
	return nil
}

func (x *GetNoticesRsp) GetTotalNum() uint32 {
	if x != nil && x.TotalNum != nil {
		return *x.TotalNum
	}
	return 0
}

func (x *GetNoticesRsp) GetIsFinish() bool {
	if x != nil && x.IsFinish != nil {
		return *x.IsFinish
	}
	return false
}

func (x *GetNoticesRsp) GetAttachInfo() string {
	if x != nil && x.AttachInfo != nil {
		return *x.AttachInfo
	}
	return ""
}

type NeedInsertCommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentID *string `protobuf:"bytes,1,opt,name=commentID" json:"commentID,omitempty"`
}

func (x *NeedInsertCommentInfo) Reset() {
	*x = NeedInsertCommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NeedInsertCommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NeedInsertCommentInfo) ProtoMessage() {}

func (x *NeedInsertCommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NeedInsertCommentInfo.ProtoReflect.Descriptor instead.
func (*NeedInsertCommentInfo) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{2}
}

func (x *NeedInsertCommentInfo) GetCommentID() string {
	if x != nil && x.CommentID != nil {
		return *x.CommentID
	}
	return ""
}

type RefreshToast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (x *RefreshToast) Reset() {
	*x = RefreshToast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshToast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshToast) ProtoMessage() {}

func (x *RefreshToast) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshToast.ProtoReflect.Descriptor instead.
func (*RefreshToast) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{3}
}

func (x *RefreshToast) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type StGetChannelFeedsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo       *StCommonExt   `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	Count         *uint32        `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	From          *uint32        `protobuf:"varint,3,opt,name=from" json:"from,omitempty"`
	ChannelSign   *StChannelSign `protobuf:"bytes,4,opt,name=channelSign" json:"channelSign,omitempty"`
	FeedAttchInfo *string        `protobuf:"bytes,5,opt,name=feedAttchInfo" json:"feedAttchInfo,omitempty"`
}

func (x *StGetChannelFeedsReq) Reset() {
	*x = StGetChannelFeedsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetChannelFeedsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetChannelFeedsReq) ProtoMessage() {}

func (x *StGetChannelFeedsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetChannelFeedsReq.ProtoReflect.Descriptor instead.
func (*StGetChannelFeedsReq) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{4}
}

func (x *StGetChannelFeedsReq) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetChannelFeedsReq) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *StGetChannelFeedsReq) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *StGetChannelFeedsReq) GetChannelSign() *StChannelSign {
	if x != nil {
		return x.ChannelSign
	}
	return nil
}

func (x *StGetChannelFeedsReq) GetFeedAttchInfo() string {
	if x != nil && x.FeedAttchInfo != nil {
		return *x.FeedAttchInfo
	}
	return ""
}

type StGetChannelFeedsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo       *StCommonExt  `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	VecFeed       []*StFeed     `protobuf:"bytes,2,rep,name=vecFeed" json:"vecFeed,omitempty"`
	IsFinish      *uint32       `protobuf:"varint,3,opt,name=isFinish" json:"isFinish,omitempty"`
	User          *StUser       `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	FeedAttchInfo *string       `protobuf:"bytes,5,opt,name=feedAttchInfo" json:"feedAttchInfo,omitempty"`
	RefreshToast  *RefreshToast `protobuf:"bytes,6,opt,name=refreshToast" json:"refreshToast,omitempty"`
}

func (x *StGetChannelFeedsRsp) Reset() {
	*x = StGetChannelFeedsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetChannelFeedsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetChannelFeedsRsp) ProtoMessage() {}

func (x *StGetChannelFeedsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetChannelFeedsRsp.ProtoReflect.Descriptor instead.
func (*StGetChannelFeedsRsp) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{5}
}

func (x *StGetChannelFeedsRsp) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetChannelFeedsRsp) GetVecFeed() []*StFeed {
	if x != nil {
		return x.VecFeed
	}
	return nil
}

func (x *StGetChannelFeedsRsp) GetIsFinish() uint32 {
	if x != nil && x.IsFinish != nil {
		return *x.IsFinish
	}
	return 0
}

func (x *StGetChannelFeedsRsp) GetUser() *StUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *StGetChannelFeedsRsp) GetFeedAttchInfo() string {
	if x != nil && x.FeedAttchInfo != nil {
		return *x.FeedAttchInfo
	}
	return ""
}

func (x *StGetChannelFeedsRsp) GetRefreshToast() *RefreshToast {
	if x != nil {
		return x.RefreshToast
	}
	return nil
}

type StGetChannelShareFeedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo          *StCommonExt        `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	From             *uint32             `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	ChannelShareInfo *StChannelShareInfo `protobuf:"bytes,3,opt,name=channelShareInfo" json:"channelShareInfo,omitempty"`
}

func (x *StGetChannelShareFeedReq) Reset() {
	*x = StGetChannelShareFeedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetChannelShareFeedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetChannelShareFeedReq) ProtoMessage() {}

func (x *StGetChannelShareFeedReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetChannelShareFeedReq.ProtoReflect.Descriptor instead.
func (*StGetChannelShareFeedReq) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{6}
}

func (x *StGetChannelShareFeedReq) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetChannelShareFeedReq) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *StGetChannelShareFeedReq) GetChannelShareInfo() *StChannelShareInfo {
	if x != nil {
		return x.ChannelShareInfo
	}
	return nil
}

type StGetChannelShareFeedRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	Feed    *StFeed      `protobuf:"bytes,2,opt,name=feed" json:"feed,omitempty"`
}

func (x *StGetChannelShareFeedRsp) Reset() {
	*x = StGetChannelShareFeedRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetChannelShareFeedRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetChannelShareFeedRsp) ProtoMessage() {}

func (x *StGetChannelShareFeedRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetChannelShareFeedRsp.ProtoReflect.Descriptor instead.
func (*StGetChannelShareFeedRsp) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{7}
}

func (x *StGetChannelShareFeedRsp) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetChannelShareFeedRsp) GetFeed() *StFeed {
	if x != nil {
		return x.Feed
	}
	return nil
}

type StGetFeedCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo     *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	UserId      *string      `protobuf:"bytes,2,opt,name=userId" json:"userId,omitempty"`
	FeedId      *string      `protobuf:"bytes,3,opt,name=feedId" json:"feedId,omitempty"`
	ListNum     *uint32      `protobuf:"varint,4,opt,name=listNum" json:"listNum,omitempty"`
	From        *uint32      `protobuf:"varint,5,opt,name=from" json:"from,omitempty"`
	AttchInfo   *string      `protobuf:"bytes,6,opt,name=attchInfo" json:"attchInfo,omitempty"`
	EntrySchema *string      `protobuf:"bytes,7,opt,name=entrySchema" json:"entrySchema,omitempty"`
}

func (x *StGetFeedCommentsReq) Reset() {
	*x = StGetFeedCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetFeedCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetFeedCommentsReq) ProtoMessage() {}

func (x *StGetFeedCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetFeedCommentsReq.ProtoReflect.Descriptor instead.
func (*StGetFeedCommentsReq) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{8}
}

func (x *StGetFeedCommentsReq) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetFeedCommentsReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *StGetFeedCommentsReq) GetFeedId() string {
	if x != nil && x.FeedId != nil {
		return *x.FeedId
	}
	return ""
}

func (x *StGetFeedCommentsReq) GetListNum() uint32 {
	if x != nil && x.ListNum != nil {
		return *x.ListNum
	}
	return 0
}

func (x *StGetFeedCommentsReq) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *StGetFeedCommentsReq) GetAttchInfo() string {
	if x != nil && x.AttchInfo != nil {
		return *x.AttchInfo
	}
	return ""
}

func (x *StGetFeedCommentsReq) GetEntrySchema() string {
	if x != nil && x.EntrySchema != nil {
		return *x.EntrySchema
	}
	return ""
}

type StGetFeedCommentsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo    *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	VecComment []*StComment `protobuf:"bytes,2,rep,name=vecComment" json:"vecComment,omitempty"`
	TotalNum   *uint32      `protobuf:"varint,3,opt,name=totalNum" json:"totalNum,omitempty"`
	IsFinish   *uint32      `protobuf:"varint,4,opt,name=isFinish" json:"isFinish,omitempty"`
	AttchInfo  *string      `protobuf:"bytes,5,opt,name=attchInfo" json:"attchInfo,omitempty"`
}

func (x *StGetFeedCommentsRsp) Reset() {
	*x = StGetFeedCommentsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetFeedCommentsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetFeedCommentsRsp) ProtoMessage() {}

func (x *StGetFeedCommentsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetFeedCommentsRsp.ProtoReflect.Descriptor instead.
func (*StGetFeedCommentsRsp) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{9}
}

func (x *StGetFeedCommentsRsp) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetFeedCommentsRsp) GetVecComment() []*StComment {
	if x != nil {
		return x.VecComment
	}
	return nil
}

func (x *StGetFeedCommentsRsp) GetTotalNum() uint32 {
	if x != nil && x.TotalNum != nil {
		return *x.TotalNum
	}
	return 0
}

func (x *StGetFeedCommentsRsp) GetIsFinish() uint32 {
	if x != nil && x.IsFinish != nil {
		return *x.IsFinish
	}
	return 0
}

func (x *StGetFeedCommentsRsp) GetAttchInfo() string {
	if x != nil && x.AttchInfo != nil {
		return *x.AttchInfo
	}
	return ""
}

type StGetFeedDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo     *StCommonExt   `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	From        *uint32        `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	UserId      *string        `protobuf:"bytes,3,opt,name=userId" json:"userId,omitempty"`
	FeedId      *string        `protobuf:"bytes,4,opt,name=feedId" json:"feedId,omitempty"`
	CreateTime  *uint64        `protobuf:"varint,5,opt,name=createTime" json:"createTime,omitempty"`
	DetailType  *uint32        `protobuf:"varint,6,opt,name=detailType" json:"detailType,omitempty"`
	ChannelSign *StChannelSign `protobuf:"bytes,7,opt,name=channelSign" json:"channelSign,omitempty"`
}

func (x *StGetFeedDetailReq) Reset() {
	*x = StGetFeedDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetFeedDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetFeedDetailReq) ProtoMessage() {}

func (x *StGetFeedDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetFeedDetailReq.ProtoReflect.Descriptor instead.
func (*StGetFeedDetailReq) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{10}
}

func (x *StGetFeedDetailReq) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetFeedDetailReq) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *StGetFeedDetailReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *StGetFeedDetailReq) GetFeedId() string {
	if x != nil && x.FeedId != nil {
		return *x.FeedId
	}
	return ""
}

func (x *StGetFeedDetailReq) GetCreateTime() uint64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *StGetFeedDetailReq) GetDetailType() uint32 {
	if x != nil && x.DetailType != nil {
		return *x.DetailType
	}
	return 0
}

func (x *StGetFeedDetailReq) GetChannelSign() *StChannelSign {
	if x != nil {
		return x.ChannelSign
	}
	return nil
}

type StGetFeedDetailRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtInfo   *StCommonExt `protobuf:"bytes,1,opt,name=extInfo" json:"extInfo,omitempty"`
	Feed      *StFeed      `protobuf:"bytes,2,opt,name=feed" json:"feed,omitempty"`
	LoginUser *StUser      `protobuf:"bytes,3,opt,name=loginUser" json:"loginUser,omitempty"`
}

func (x *StGetFeedDetailRsp) Reset() {
	*x = StGetFeedDetailRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StGetFeedDetailRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StGetFeedDetailRsp) ProtoMessage() {}

func (x *StGetFeedDetailRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_channel_GuildFeedCloudRead_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StGetFeedDetailRsp.ProtoReflect.Descriptor instead.
func (*StGetFeedDetailRsp) Descriptor() ([]byte, []int) {
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP(), []int{11}
}

func (x *StGetFeedDetailRsp) GetExtInfo() *StCommonExt {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

func (x *StGetFeedDetailRsp) GetFeed() *StFeed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *StGetFeedDetailRsp) GetLoginUser() *StUser {
	if x != nil {
		return x.LoginUser
	}
	return nil
}

var File_pb_channel_GuildFeedCloudRead_proto protoreflect.FileDescriptor

var file_pb_channel_GuildFeedCloudRead_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x47, 0x75, 0x69,
	0x6c, 0x64, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x61, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x23,
	0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x46, 0x65, 0x65, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x47, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x35, 0x0a, 0x15, 0x4e, 0x65, 0x65, 0x64,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x07,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x41, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x41, 0x74, 0x74,
	0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x14, 0x53, 0x74, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x73, 0x70, 0x12,
	0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x29, 0x0a, 0x07, 0x76, 0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x07, 0x76, 0x65, 0x63, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x65, 0x65, 0x64, 0x41, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x41, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x61, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x22, 0xa7, 0x01, 0x0a,
	0x18, 0x53, 0x74, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x47, 0x0a,
	0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6f, 0x0a, 0x18, 0x53, 0x74, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0xd0,
	0x01, 0x0a, 0x14, 0x53, 0x74, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52, 0x07,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x76, 0x65, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x76, 0x65, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x82, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x52,
	0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x45, 0x78, 0x74, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x53, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65,
	0x65, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e,
	0x53, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x14, 0x5a, 0x12, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x3b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
}

var (
	file_pb_channel_GuildFeedCloudRead_proto_rawDescOnce sync.Once
	file_pb_channel_GuildFeedCloudRead_proto_rawDescData = file_pb_channel_GuildFeedCloudRead_proto_rawDesc
)

func file_pb_channel_GuildFeedCloudRead_proto_rawDescGZIP() []byte {
	file_pb_channel_GuildFeedCloudRead_proto_rawDescOnce.Do(func() {
		file_pb_channel_GuildFeedCloudRead_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_channel_GuildFeedCloudRead_proto_rawDescData)
	})
	return file_pb_channel_GuildFeedCloudRead_proto_rawDescData
}

var file_pb_channel_GuildFeedCloudRead_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pb_channel_GuildFeedCloudRead_proto_goTypes = []interface{}{
	(*GetNoticesReq)(nil),            // 0: channel.GetNoticesReq
	(*GetNoticesRsp)(nil),            // 1: channel.GetNoticesRsp
	(*NeedInsertCommentInfo)(nil),    // 2: channel.NeedInsertCommentInfo
	(*RefreshToast)(nil),             // 3: channel.RefreshToast
	(*StGetChannelFeedsReq)(nil),     // 4: channel.StGetChannelFeedsReq
	(*StGetChannelFeedsRsp)(nil),     // 5: channel.StGetChannelFeedsRsp
	(*StGetChannelShareFeedReq)(nil), // 6: channel.StGetChannelShareFeedReq
	(*StGetChannelShareFeedRsp)(nil), // 7: channel.StGetChannelShareFeedRsp
	(*StGetFeedCommentsReq)(nil),     // 8: channel.StGetFeedCommentsReq
	(*StGetFeedCommentsRsp)(nil),     // 9: channel.StGetFeedCommentsRsp
	(*StGetFeedDetailReq)(nil),       // 10: channel.StGetFeedDetailReq
	(*StGetFeedDetailRsp)(nil),       // 11: channel.StGetFeedDetailRsp
	(*StCommonExt)(nil),              // 12: channel.StCommonExt
	(*StNotice)(nil),                 // 13: channel.StNotice
	(*StChannelSign)(nil),            // 14: channel.StChannelSign
	(*StFeed)(nil),                   // 15: channel.StFeed
	(*StUser)(nil),                   // 16: channel.StUser
	(*StChannelShareInfo)(nil),       // 17: channel.StChannelShareInfo
	(*StComment)(nil),                // 18: channel.StComment
}
var file_pb_channel_GuildFeedCloudRead_proto_depIdxs = []int32{
	12, // 0: channel.GetNoticesReq.extInfo:type_name -> channel.StCommonExt
	12, // 1: channel.GetNoticesRsp.extInfo:type_name -> channel.StCommonExt
	13, // 2: channel.GetNoticesRsp.notices:type_name -> channel.StNotice
	12, // 3: channel.StGetChannelFeedsReq.extInfo:type_name -> channel.StCommonExt
	14, // 4: channel.StGetChannelFeedsReq.channelSign:type_name -> channel.StChannelSign
	12, // 5: channel.StGetChannelFeedsRsp.extInfo:type_name -> channel.StCommonExt
	15, // 6: channel.StGetChannelFeedsRsp.vecFeed:type_name -> channel.StFeed
	16, // 7: channel.StGetChannelFeedsRsp.user:type_name -> channel.StUser
	3,  // 8: channel.StGetChannelFeedsRsp.refreshToast:type_name -> channel.RefreshToast
	12, // 9: channel.StGetChannelShareFeedReq.extInfo:type_name -> channel.StCommonExt
	17, // 10: channel.StGetChannelShareFeedReq.channelShareInfo:type_name -> channel.StChannelShareInfo
	12, // 11: channel.StGetChannelShareFeedRsp.extInfo:type_name -> channel.StCommonExt
	15, // 12: channel.StGetChannelShareFeedRsp.feed:type_name -> channel.StFeed
	12, // 13: channel.StGetFeedCommentsReq.extInfo:type_name -> channel.StCommonExt
	12, // 14: channel.StGetFeedCommentsRsp.extInfo:type_name -> channel.StCommonExt
	18, // 15: channel.StGetFeedCommentsRsp.vecComment:type_name -> channel.StComment
	12, // 16: channel.StGetFeedDetailReq.extInfo:type_name -> channel.StCommonExt
	14, // 17: channel.StGetFeedDetailReq.channelSign:type_name -> channel.StChannelSign
	12, // 18: channel.StGetFeedDetailRsp.extInfo:type_name -> channel.StCommonExt
	15, // 19: channel.StGetFeedDetailRsp.feed:type_name -> channel.StFeed
	16, // 20: channel.StGetFeedDetailRsp.loginUser:type_name -> channel.StUser
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pb_channel_GuildFeedCloudRead_proto_init() }
func file_pb_channel_GuildFeedCloudRead_proto_init() {
	if File_pb_channel_GuildFeedCloudRead_proto != nil {
		return
	}
	file_pb_channel_GuildFeedCloudMeta_proto_init()
	file_pb_channel_GuildChannelBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNoticesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNoticesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NeedInsertCommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshToast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetChannelFeedsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetChannelFeedsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetChannelShareFeedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetChannelShareFeedRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetFeedCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetFeedCommentsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetFeedDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_channel_GuildFeedCloudRead_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StGetFeedDetailRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_channel_GuildFeedCloudRead_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_channel_GuildFeedCloudRead_proto_goTypes,
		DependencyIndexes: file_pb_channel_GuildFeedCloudRead_proto_depIdxs,
		MessageInfos:      file_pb_channel_GuildFeedCloudRead_proto_msgTypes,
	}.Build()
	File_pb_channel_GuildFeedCloudRead_proto = out.File
	file_pb_channel_GuildFeedCloudRead_proto_rawDesc = nil
	file_pb_channel_GuildFeedCloudRead_proto_goTypes = nil
	file_pb_channel_GuildFeedCloudRead_proto_depIdxs = nil
}
